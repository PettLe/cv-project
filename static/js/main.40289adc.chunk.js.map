{"version":3,"sources":["components/Personal.js","components/Education.js","components/WorkHistory.js","App.js","index.js"],"names":["Personal","props","useState","isActive","setIsActive","nameInfo","emailInfo","phoneInfo","ageInfo","id","info","setInfo","personal","personalInfo","handleChange","onSubmitPersonal","console","log","className","onSubmit","htmlFor","onChange","type","name","value","nameInput","emailInput","phoneInput","ageInput","onClick","map","item","style","color","placeholder","Education","schoolInfo","degreeInfo","startInfo","endInfo","uniqid","onSubmitEducation","handleChangeEducation","school","schoolInput","degreeInput","startInput","endInput","WorkHistory","jobInfo","titleInfo","taskInfo","jobStartInfo","jobEndInfo","onSubmitWork","handleChangeWork","work","workInfo","companyInput","positionInput","taskInput","jobStartInput","jobEndInput","App","e","persist","target","setState","prevState","state","preventDefault","concat","Date","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40289adc.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { EditText } from \"react-edit-text\";\nimport \"react-edit-text/dist/index.css\";\n\nconst Personal = (props) => {\n  const [isActive, setIsActive] = useState(false);\n  const [[info], setInfo] = useState([\n    {\n      nameInfo: \"\",\n      emailInfo: \"\",\n      phoneInfo: \"\",\n      ageInfo: \"\",\n      id: \"\",\n    },\n  ]);\n\n  const { personal, personalInfo, handleChange, onSubmitPersonal } = props;\n\n  console.log(info.nameInfo);\n  return (\n    <div className=\"Personal\">\n      <h2>Personal information</h2>\n      <form\n        className={isActive ? \"hidden\" : \"personalForm\"}\n        onSubmit={onSubmitPersonal}\n      >\n        <label htmlFor=\"nameInput\">Name: </label>\n        <br />\n        <input\n          onChange={handleChange}\n          type=\"text\"\n          name=\"nameInput\"\n          value={personal.nameInput}\n          aria-required\n        />\n        <br />\n        <label htmlFor=\"emailInput\">E-mail: </label>\n        <br />\n        <input\n          onChange={handleChange}\n          type=\"email\"\n          name=\"emailInput\"\n          value={personal.emailInput}\n          aria-required\n        />\n        <br />\n        <label htmlFor=\"phoneInput\">Phone number: </label>\n        <br />\n        <input\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"phoneInput\"\n          value={personal.phoneInput}\n          aria-required\n        />\n        <br />\n        <label htmlFor=\"ageInput\">Date of Birth: </label>\n        <br />\n        <input\n          type=\"date\"\n          onChange={handleChange}\n          name=\"ageInput\"\n          value={personal.ageInput}\n          aria-required\n        />\n        <br />\n        <button onClick={() => setIsActive(!isActive)} type=\"submit\">\n          Submit\n        </button>\n      </form>\n      <div className={isActive ? \"perData\" : \"hidden\"}>\n        {personalInfo.map((item) => {\n          return (\n            <ul key={item.id}>\n              <li>\n                Name:{\" \"}\n                <EditText\n                  id=\"infoName\"\n                  onChange={setInfo}\n                  style={{ color: \"#000000\" }}\n                  placeholder={item.nameInput}\n                  value={info.nameInfo}\n                />\n              </li>\n              <li>\n                E-mail:{\" \"}\n                <EditText\n                  id=\"infoEmail\"\n                  onChange={setInfo}\n                  style={{ color: \"#000000\" }}\n                  placeholder={item.emailInput}\n                  value={info.emailInfo}\n                />\n              </li>\n              <li>\n                Phone:{\" \"}\n                <EditText\n                  id=\"infoPhone\"\n                  onChange={setInfo}\n                  style={{ color: \"#000000\" }}\n                  placeholder={item.phoneInput}\n                  value={info.phoneInfo}\n                />\n              </li>\n              <li>\n                Date of Birth:{\" \"}\n                <EditText\n                  type=\"date\"\n                  id=\"infoAge\"\n                  onChange={setInfo}\n                  style={{ color: \"#000000\" }}\n                  placeholder={item.ageInput}\n                  value={info.ageInfo}\n                />\n              </li>\n            </ul>\n          );\n        })}\n        <hr />\n      </div>\n    </div>\n  );\n};\n\nexport default Personal;\n","import React, { useState } from \"react\";\nimport { EditText } from \"react-edit-text\";\nimport \"react-edit-text/dist/index.css\";\nimport uniqid from \"uniqid\";\n\nconst Education = (props) => {\n  const [isActive, setIsActive] = useState(false);\n  const [[info], setInfo] = useState([\n    {\n      schoolInfo: \"\",\n      degreeInfo: \"\",\n      startInfo: \"\",\n      endInfo: \"\",\n      id: uniqid(),\n    },\n  ]);\n\n  const { onSubmitEducation, handleChangeEducation, school, schoolInfo } =\n    props;\n\n  return (\n    <div className=\"Education\">\n      <h2>Education information</h2>\n      <form\n        className={isActive ? \"hidden\" : \"educationForm\"}\n        onSubmit={onSubmitEducation}\n      >\n        <label htmlFor=\"schoolInput\">School: </label>\n        <br />\n        <input\n          onChange={handleChangeEducation}\n          type=\"text\"\n          name=\"schoolInput\"\n          value={school.schoolInput}\n          aria-required\n        />\n        <br />\n        <label htmlFor=\"degreeInput\">Degree: </label>\n        <br />\n        <input\n          onChange={handleChangeEducation}\n          type=\"text\"\n          name=\"degreeInput\"\n          value={school.degreeInput}\n          aria-required\n        />\n        <br />\n        <label htmlFor=\"startInput\">Start: </label>\n        <br />\n        <input\n          type=\"date\"\n          onChange={handleChangeEducation}\n          name=\"startInput\"\n          value={school.startInput}\n          aria-required\n        />\n        <br />\n        <label htmlFor=\"endInput\">End: </label>\n        <br />\n        <input\n          type=\"date\"\n          onChange={handleChangeEducation}\n          name=\"endInput\"\n          value={school.endInput}\n          aria-required\n        />\n        <br />\n        <button onClick={() => setIsActive(!isActive)} type=\"submit\">\n          Submit\n        </button>\n      </form>\n      <div className={isActive ? \"eduData\" : \"hidden\"}>\n        {schoolInfo.map((item) => {\n          return (\n            <ul key={item.id}>\n              <li>\n                School:{\" \"}\n                <EditText\n                  onChange={setInfo}\n                  style={{ color: \"#000000\" }}\n                  placeholder={item.schoolInput}\n                  value={info.schoolInfo}\n                />\n              </li>\n              <li>\n                Degree:{\" \"}\n                <EditText\n                  onChange={setInfo}\n                  style={{ color: \"#000000\" }}\n                  placeholder={item.degreeInput}\n                  value={info.degreeInfo}\n                />\n              </li>\n              <li>\n                Start:{\" \"}\n                <EditText\n                  type=\"date\"\n                  onChange={setInfo}\n                  style={{ color: \"#000000\" }}\n                  placeholder={item.startInput}\n                  value={info.startInfo}\n                />\n              </li>\n              <li>\n                End:{\" \"}\n                <EditText\n                  type=\"date\"\n                  onChange={setInfo}\n                  style={{ color: \"#000000\" }}\n                  placeholder={item.endInput}\n                  value={info.startInfo}\n                />\n              </li>\n              <br />\n            </ul>\n          );\n        })}\n        <button onClick={() => setIsActive(!isActive)}>Add new</button>\n        <hr />\n      </div>\n    </div>\n  );\n};\n\nexport default Education;\n","import React, { useState } from \"react\";\nimport { EditText } from \"react-edit-text\";\nimport \"react-edit-text/dist/index.css\";\nimport uniqid from \"uniqid\";\n\nconst WorkHistory = (props) => {\n  const [isActive, setIsActive] = useState(false);\n  const [[info], setInfo] = useState([\n    {\n      jobInfo: \"\",\n      titleInfo: \"\",\n      taskInfo: \"\",\n      jobStartInfo: \"\",\n      jobEndInfo: \"\",\n      id: uniqid(),\n    },\n  ]);\n  const { onSubmitWork, handleChangeWork, work, workInfo } = props;\n\n  return (\n    <div className=\"WorkHistory\">\n      <h2>Work Experience</h2>\n      <form\n        className={isActive ? \"hidden\" : \"workForm\"}\n        onSubmit={onSubmitWork}\n      >\n        <label htmlFor=\"companyInput\">Company: </label>\n        <br />\n        <input\n          onChange={handleChangeWork}\n          type=\"text\"\n          name=\"companyInput\"\n          value={work.companyInput}\n          aria-required\n        />\n        <br />\n        <label htmlFor=\"positionInput\">Position: </label>\n        <br />\n        <input\n          onChange={handleChangeWork}\n          type=\"text\"\n          name=\"positionInput\"\n          value={work.positionInput}\n          aria-required\n        />\n        <br />\n        <label htmlFor=\"taskInput\">Tasks: </label>\n        <br />\n        <input\n          onChange={handleChangeWork}\n          type=\"text\"\n          name=\"taskInput\"\n          value={work.taskInput}\n          aria-required\n        />\n        <br />\n        <label htmlFor=\"jobStartInput\">Start: </label>\n        <br />\n        <input\n          type=\"date\"\n          onChange={handleChangeWork}\n          name=\"jobStartInput\"\n          value={work.jobStartInput}\n          aria-required\n        />\n        <br />\n        <label htmlFor=\"jobEndInput\">End: </label>\n        <br />\n        <input\n          type=\"date\"\n          onChange={handleChangeWork}\n          name=\"jobEndInput\"\n          value={work.jobEndInput}\n          aria-required\n        />\n        <br />\n        <button onClick={() => setIsActive(!isActive)} type=\"submit\">\n          Submit\n        </button>\n      </form>\n      <div className={isActive ? \"workData\" : \"hidden\"}>\n        {workInfo.map((item) => {\n          return (\n            <ul key={item.id}>\n              <li>\n                Company:{\" \"}\n                <EditText\n                  onChange={setInfo}\n                  style={{ color: \"#000000\" }}\n                  placeholder={item.companyInput}\n                  value={info.jobInfo}\n                />\n              </li>\n              <li>\n                Position:{\" \"}\n                <EditText\n                  onChange={setInfo}\n                  style={{ color: \"#000000\" }}\n                  placeholder={item.positionInput}\n                  value={info.titleInfo}\n                />\n              </li>\n              <li>\n                Tasks:{\" \"}\n                <EditText\n                  onChange={setInfo}\n                  style={{ color: \"#000000\" }}\n                  placeholder={item.taskInput}\n                  value={info.taskInfo}\n                />\n              </li>\n              <li>\n                Start:{\" \"}\n                <EditText\n                  type=\"date\"\n                  onChange={setInfo}\n                  style={{ color: \"#000000\" }}\n                  placeholder={item.jobStartInput}\n                  value={info.jobStartInfo}\n                />\n              </li>\n              <li>\n                End:{\" \"}\n                <EditText\n                  type=\"date\"\n                  onChange={setInfo}\n                  style={{ color: \"#000000\" }}\n                  placeholder={item.jobEndInput}\n                  value={info.jobEndInfo}\n                />\n              </li>\n              <br />\n            </ul>\n          );\n        })}\n        <button onClick={() => setIsActive(!isActive)}>Add new</button>\n        <hr />\n      </div>\n    </div>\n  );\n};\n\nexport default WorkHistory;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport uniqid from \"uniqid\";\n\n//Import Components\nimport Personal from \"./components/Personal\";\nimport Education from \"./components/Education\";\nimport WorkHistory from \"./components/WorkHistory\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      personalInfo: [],\n      personal: {\n        nameInput: \"\",\n        emailInput: \"\",\n        phoneInput: \"\",\n        ageInput: new Date(),\n        id: uniqid(),\n      },\n      workInfo: [],\n      work: {\n        companyInput: \"\",\n        positionInput: \"\",\n        taskInput: \"\",\n        jobStartInput: new Date(),\n        jobEndInput: new Date(),\n        id: uniqid(),\n      },\n      schoolInfo: [],\n      school: {\n        schoolInput: \"\",\n        degreeInput: \"\",\n        startInput: new Date(),\n        endInput: new Date(),\n        id: uniqid(),\n      },\n    };\n  }\n\n  //CHANGE HANDLERS\n  handleChange = (e) => {\n    e.persist();\n\n    let value = e.target.value;\n\n    this.setState((prevState) => ({\n      personal: {\n        ...prevState.personal,\n        [e.target.name]: value,\n        id: this.state.personal.id,\n      },\n    }));\n  };\n\n  handleChangeEducation = (e) => {\n    e.persist();\n\n    let value = e.target.value;\n\n    this.setState((prevState) => ({\n      school: {\n        ...prevState.school,\n        [e.target.name]: value,\n        id: this.state.school.id,\n      },\n    }));\n  };\n\n  handleChangeWork = (e) => {\n    e.persist();\n\n    let value = e.target.value;\n\n    this.setState((prevState) => ({\n      work: {\n        ...prevState.work,\n        [e.target.name]: value,\n        id: this.state.work.id,\n      },\n    }));\n  };\n\n  //SUBMIT HANDLERS\n  onSubmitPersonal = (e) => {\n    e.preventDefault();\n    this.setState({\n      personalInfo: this.state.personalInfo.concat(this.state.personal),\n    });\n  };\n\n  onSubmitEducation = (e) => {\n    e.preventDefault();\n    this.setState({\n      schoolInfo: this.state.schoolInfo.concat(this.state.school),\n      school: {\n        schoolInput: \"\",\n        degreeInput: \"\",\n        startInput: new Date(),\n        endInput: new Date(),\n        id: uniqid(),\n      },\n    });\n  };\n\n  onSubmitWork = (e) => {\n    e.preventDefault();\n    this.setState({\n      workInfo: this.state.workInfo.concat(this.state.work),\n      work: {\n        companyInput: \"\",\n        positionInput: \"\",\n        taskInput: \"\",\n        jobStartInput: new Date(),\n        jobEndInput: new Date(),\n        id: uniqid(),\n      },\n    });\n  };\n\n  render() {\n    const { workInfo, personal, personalInfo, schoolInfo, school, work } =\n      this.state;\n    return (\n      <div className=\"App\">\n        <div className=\"formComponents\">\n          <h1>CV Project</h1>\n          <h4>&copy; Petteri Leino 2021</h4>\n          <div className=\"flexAll\">\n            <div className=\"formFlex\">\n              <Personal\n                personal={personal}\n                personalInfo={personalInfo}\n                handleChange={this.handleChange}\n                onSubmitPersonal={this.onSubmitPersonal}\n              />\n              <Education\n                school={school}\n                schoolInfo={schoolInfo}\n                handleChangeEducation={this.handleChangeEducation}\n                onSubmitEducation={this.onSubmitEducation}\n              />\n\n              <WorkHistory\n                work={work}\n                workInfo={workInfo}\n                handleChangeWork={this.handleChangeWork}\n                onSubmitWork={this.onSubmitWork}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}